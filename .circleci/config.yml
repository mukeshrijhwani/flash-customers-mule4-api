# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: mukeshrijhwani/mvn-plus-npm 
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      #- run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
        
      # run tests!
      - run: mvn clean package -DskipTests=true deploy com.bazaarvoice.maven.plugins:s3-upload-maven-plugin:1.2:s3-upload  --settings settings.xml
  promote:
    docker:
      - image: mukeshrijhwani/mvn-plus-npm      
    working_directory: ~/repo
    steps:
      - checkout    
    
      # 1. Run Integration tests.
      - run: newman run promote/it.pc.json --global-var targetApplicationName=$ANYPOINT_APPLICATION_NAME;

      # 2. promote the binary      
      #- run: newman run promote/promote.pc.json --global-var ANYPOINT_USERNAME=$ANYPOINT_USERNAME --global-var ANYPOINT_PASSWORD=$ANYPOINT_PASSWORD --global-var targetApplicationName=$ANYPOINT_TARGET_APPLICATION_NAME --global-var sourceApplicationName=$ANYPOINT_APPLICATION_NAME --global-var targetEnvironmentName=$ANYPOINT_TARGET_ENVIRONMENT --global-var sourceEnvironmentName=$ANYPOINT_ENVIRONMENT      
      #- run: anypoint-cli --username=$ANYPOINT_USERNAME --password=$ANYPOINT_PASSWORD runtime-mgr cloudhub-application copy $ANYPOINT_APPLICATION_NAME :$ANYPOINT_TARGET_ENVIRONMENT/$ANYPOINT_TARGET_APPLICATION_NAME

      ######### download from cloudhub ##########      
      # 2a. download the binary zip file
      #- run: perl create_environment_variables.pl env1.json
      #- run: node script.js
      #- run: ls -lrt; rm env.json
      ######### download from cloudhub ##########      

      # 3. upload the binary zip to aws repository
      #- run: anypoint-cli runtime-mgr cloudhub-application describe $ANYPOINT_APPLICATION_NAME       
      #- run: echo 'export SOURCE_FILENAME=$( eval anypoint-cli runtime-mgr cloudhub-application describe $ANYPOINT_APPLICATION_NAME | grep "File name" | cut -f 2)' >> ~/.env
      - run: echo 'export SOURCE_FILENAME=$( eval anypoint-cli runtime-mgr cloudhub-application describe $ANYPOINT_APPLICATION_NAME -f "File\ name" | cut -f 2)' >> ~/.env      
      - run: 
          environment:
            BASH_ENV: ~/.env
          command:  aws s3 cp s3://$AWS_S3_BUCKET_NAME/$ANYPOINT_ENVIRONMENT/$SOURCE_FILENAME s3://mukesh-mulesoft/$ANYPOINT_TARGET_ENVIRONMENT/  

workflows:
 version: 2
 build-and-promote-workflow:
   jobs:
     - build
     - hold-for-approval:
         type: approval
         requires:
           - build
     - promote:
         requires:
           - hold-for-approval
